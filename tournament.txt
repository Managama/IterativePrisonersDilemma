--------------------------------------------------------------------------------
Section 0 - Line up
--------------------------------------------------------------------------------
Player 0 (P0): Morgan5Wilson, Playing it safe.
        As long as my score is higher I will always collude.
Player 1 (P1): E1, Betray
        Always betray.
Player 2 (P2): E2, Alternate
        Collude, then alternate.
Player 3 (P3): E3, Collude but retaliate
        Collude first round. Collude, except in a round after getting 
        a severe punishment.
--------------------------------------------------------------------------------
Section 1 - Player vs. Player
--------------------------------------------------------------------------------
Each column shows pts/round earned against each other player:
             P0     P1     P2     P3
vs. P0 :      0    -66   -145   -136
vs. P1 :   -383      0   -376   -375
vs. P2 :   -171    -74      0   -199
vs. P3 :   -132    -75   -199      0
TOTAL  :   -686   -215   -720   -710
--------------------------------------------------------------------------------
Section 2 - Leaderboard
--------------------------------------------------------------------------------
Average points per round:
Team name (P#):  Score      with strategy name
E1        (P1):        -54 points with Betray                                  
Morgan5Wil(P0):       -172 points with Playing it safe.                        
E3        (P3):       -178 points with Collude but retaliate                   
E2        (P2):       -180 points with Alternate                               
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
morgan--------------------------------------------------------------------------------
    #################################################
    # Each team's file must define four tokens:     #
    #   team_name: a string                         #
    #     strategy_name: a string                   #
    #     strategy_description: a string            #
    #     move: A function that returns 'c' or 'b'  #
    #################################################

team_name = 'Morgan5Wilson' # Only 10 chars displayed.
strategy_name = 'Playing it safe.'
strategy_description = 'As long as my score is higher I will always collude.'


def move(my_history, their_history, my_score, their_score): #positiveresults
    import random
    list = ('c', 'b')
    if my_score > their_score:
        return 'c'
    else:
        return random.choice(list)

    
    #################################################################################################################
    # Arguements Accepted:  my_history, their_history are strings; my_score, their_score are ints                   #
    # my_history:           a string with one letter (c or b) per round that has been played with this opponentself.#
    # their_history:        a string of the same length as history, possibly emptyself                              #
    # first round:          my_history[0] and their_history[0]                                                      #
    # most recent round:    my_history[-1] and their_history[-1]                                                    #
    # Analyze my_history and their_history and/or my_score and their_score                                          #
    # Make my move:         Returns 'c' or 'b'.                                                                     #
    # c =                   COLLUDE                                                                                 #
    # b =                   BETRAY                                                                                  #
    #################################################################################################################

def test_move(my_history, their_history, my_score, their_score, result):
    '''calls move(my_history, their_history, my_score, their_score)
    from this module. Prints error if return value != result.
    Returns True or False, dpending on whether result was as expected.
    '''
    real_result = move(my_history, their_history, my_score, their_score)
    if real_result == result:
        return True
    else:
        print("move(" +
            ", ".join(["'"+my_history+"'", "'"+their_history+"'",
                       str(my_score), str(their_score)])+
            ") returned " + "'" + real_result + "'" +
            " and should have returned '" + result + "'")
        return False

if __name__ == '__main__':
     
    # Test 1: Betray on first move.
    if test_move(my_history='',
              their_history='', 
              my_score=0,
              their_score=0,
              result='b'):
         print 'Test passed'
     # Test 2: Continue betraying if they collude despite being betrayed.
    test_move(my_history= 'bbb',
              their_history= 'ccc', 
            
            ##################################################################### 
            # Note the scores are for testing move()                            #
            # The history and scores don't need to match unless                 #
            # that is relevant to the test of move(). Here,                     #
            # the simulation (if working correctly) would have awarded          #
            # 300 to me and -750 to them. This test will pass if and only if    #
            # TODO: write code...                                               #
            # move('bbb', 'ccc', 0, 0) returns 'b'.                             #
            #####################################################################
              
              my_score=0, 
              their_score=0,
              result='b')             --------------------------------------------------------------------------------
example1--------------------------------------------------------------------------------
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####

team_name = 'E1'
strategy_name = 'Betray'
strategy_description = 'Always betray.'
    
def move(my_history, their_history, my_score, their_score):
    '''Make my move based on the history with this player.
    
    history: a string with one letter (c or b) per round that has been played with this opponent.
    their_history: a string of the same length as history, possibly empty. 
    The first round between these two players is my_history[0] and their_history[0]
    The most recent round is my_history[-1] and their_history[-1]
    
    Returns 'c' or 'b' for collude or betray.
    '''
    
    #This example player always betrays.      
    return 'b'
--------------------------------------------------------------------------------
example2--------------------------------------------------------------------------------
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####

team_name = 'E2'
strategy_name = 'Alternate'
strategy_description = 'Collude, then alternate.'
    
def move(my_history, their_history, my_score, their_score):
    '''Make my move based on the history with this player.
    
    history: a string with one letter (c or b) per round that has been played with this opponent.
    their_history: a string of the same length as history, possibly empty. 
    The first round between these two players is my_history[0] and their_history[0]
    The most recent round is my_history[-1] and their_history[-1]
    
    Returns 'c' or 'b' for collude or betray.
    '''
    # This player colludes on even numbered rounds (first round is round #0).
    if len(my_history)%2 == 0:
        return 'c'
    else:
        return 'b'
    --------------------------------------------------------------------------------
example3--------------------------------------------------------------------------------
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####

team_name = 'E3'
strategy_name = 'Collude but retaliate'
strategy_description = '''\
Collude first round. Collude, except in a round after getting 
a severe punishment.'''
    
def move(my_history, their_history, my_score, their_score):
    '''Make my move based on the history with this player.
    
    history: a string with one letter (c or b) per round that has been played with this opponent.
    their_history: a string of the same length as history, possibly empty. 
    The first round between these two players is my_history[0] and their_history[0]
    The most recent round is my_history[-1] and their_history[-1]
    
    Returns 'c' or 'b' for collude or betray.
    '''
    if len(my_history)==0: # It's the first round; collude.
        return 'c'
    elif my_history[-1]=='c' and their_history[-1]=='b':
        return 'b' # Betray if they were severely punished last time,
    else:
        return 'c' # otherwise collude.--------------------------------------------------------------------------------
Section 3 - Game Data for Team Morgan5Wilson
--------------------------------------------------------------------------------
-383 pt/round: Morgan5Wilson(P0) "Playing it safe."
-66 pt/round: E1(P1) "Betray"
cbccbccccbcbcbbbcbcccbcccbbccccccbbcbbccccbcbcbbcbbbccbcbccbbbbcbbbbccbccbbbcbcc
BbBBbBBBBbBbBbbbBbBBBbBBBbbBBBBBBbbBbbBBBBbBbBbbBbbbBBbBbBBbbbbBbbbbBBbBBbbbBbBB

bbbcbccbccccbbcbbcccbbccbccbbccbbbbbccbcbccbcbbcbbbbcbcccbcbbcbbccbcbbcccccbcccb
bbbBbBBbBBBBbbBbbBBBbbBBbBBbbBBbbbbbBBbBbBBbBbbBbbbbBbBBBbBbbBbbBBbBbbBBBBBbBBBb

cbbccbbcbbccccccbb
BbbBBbbBbbBBBBBBbb

--------------------------------------------------------------------------------
-171 pt/round: Morgan5Wilson(P0) "Playing it safe."
-145 pt/round: E2(P2) "Alternate"
CcCbBbBcCcBbCcBcCbBbCcCbCcCbCcBbCcBcBcCcCcBbCcCcCcBbCcCcBcCbCbCcBbBbCbBcCbCcBbCc
CBCbcbcBCBcbCBcBCbcbCBCbCBCbCBcbCBcBcBCBCBcbCBCBCBcbCBCBcBCbCbCBcbcbCbcBCbCBcbCB

BbCbBcCbBcBbCbBbCcCcBbCcBcBcCbCbCbBcBbBcCcCcBbCbCcCbBcCbBcBcBbBbCcCbBcBcCbCcBcBb
cbCbcBCbcBcbCbcbCBCBcbCBcBcBCbCbCbcBcbcBCBCBcbCbCBCbcBCbcBcBcbcbCBCbcBcBCbCBcBcb

Bc
cB

--------------------------------------------------------------------------------
-132 pt/round: Morgan5Wilson(P0) "Playing it safe."
-136 pt/round: E3(P3) "Collude but retaliate"
BcBcBcCBcCBcCCBcBcCCCBcCBcCBcBcCCBcBcCBcCBcCBcBcBcBcCCBcBcCCCCBcBcCBcCBcCBcBcBcB
cBcBcBCcBCcBCCcBcBCCCcBCcBCcBcBCCcBcBCcBCcBCcBcBcBcBCCcBcBCCCCcBcBCcBCcBCcBcBcBc

cCBcCCCCBcBcCBcBcCCBcCBcBcBcCCCCBcCCBcCCCCCCCBcBcBcBcBcCBcBcCCBcBcCCBcB
BCcBCCCCcBcBCcBcBCCcBCcBcBcBCCCCcBCCcBCCCCCCCcBcBcBcBcBCcBcBCCcBcBCCcBc

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Section 3 - Game Data for Team E1
--------------------------------------------------------------------------------
-66 pt/round: E1(P1) "Betray"
-383 pt/round: Morgan5Wilson(P0) "Playing it safe."
BbBBbBBBBbBbBbbbBbBBBbBBBbbBBBBBBbbBbbBBBBbBbBbbBbbbBBbBbBBbbbbBbbbbBBbBBbbbBbBB
cbccbccccbcbcbbbcbcccbcccbbccccccbbcbbccccbcbcbbcbbbccbcbccbbbbcbbbbccbccbbbcbcc

bbbBbBBbBBBBbbBbbBBBbbBBbBBbbBBbbbbbBBbBbBBbBbbBbbbbBbBBBbBbbBbbBBbBbbBBBBBbBBBb
bbbcbccbccccbbcbbcccbbccbccbbccbbbbbccbcbccbcbbcbbbbcbcccbcbbcbbccbcbbcccccbcccb

BbbBBbbBbbBBBBBBbb
cbbccbbcbbccccccbb

--------------------------------------------------------------------------------
-74 pt/round: E1(P1) "Betray"
-376 pt/round: E2(P2) "Alternate"
BbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBb
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb

BbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbB
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbc

--------------------------------------------------------------------------------
-75 pt/round: E1(P1) "Betray"
-375 pt/round: E3(P3) "Collude but retaliate"
BbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBb
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb

BbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBb
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb

BbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBb
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Section 3 - Game Data for Team E2
--------------------------------------------------------------------------------
-145 pt/round: E2(P2) "Alternate"
-171 pt/round: Morgan5Wilson(P0) "Playing it safe."
CBCbcbcBCBcbCBcBCbcbCBCbCBCbCBcbCBcBcBCBCBcbCBCBCBcbCBCBcBCbCbCBcbcbCbcBCbCBcbCB
CcCbBbBcCcBbCcBcCbBbCcCbCcCbCcBbCcBcBcCcCcBbCcCcCcBbCcCcBcCbCbCcBbBbCbBcCbCcBbCc

cbCbcBCbcBcbCbcbCBCBcbCBcBcBCbCbCbcBcbcBCBCBcbCbCBCbcBCbcBcBcbcbCBCbcBcBCbCBcBcb
BbCbBcCbBcBbCbBbCcCcBbCcBcBcCbCbCbBcBbBcCcCcBbCbCcCbBcCbBcBcBbBbCcCbBcBcCbCcBcBb

cB
Bc

--------------------------------------------------------------------------------
-376 pt/round: E2(P2) "Alternate"
-74 pt/round: E1(P1) "Betray"
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb
BbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBb

cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbc
BbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbB

--------------------------------------------------------------------------------
-199 pt/round: E2(P2) "Alternate"
-199 pt/round: E3(P3) "Collude but retaliate"
CBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB
CcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc

cBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc
BcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Section 3 - Game Data for Team E3
--------------------------------------------------------------------------------
-136 pt/round: E3(P3) "Collude but retaliate"
-132 pt/round: Morgan5Wilson(P0) "Playing it safe."
cBcBcBCcBCcBCCcBcBCCCcBCcBCcBcBCCcBcBCcBCcBCcBcBcBcBCCcBcBCCCCcBcBCcBCcBCcBcBcBc
BcBcBcCBcCBcCCBcBcCCCBcCBcCBcBcCCBcBcCBcCBcCBcBcBcBcCCBcBcCCCCBcBcCBcCBcCBcBcBcB

BCcBCCCCcBcBCcBcBCCcBCcBcBcBCCCCcBCCcBCCCCCCCcBcBcBcBcBCcBcBCCcBcBCCcBc
cCBcCCCCBcBcCBcBcCCBcCBcBcBcCCCCBcCCBcCCCCCCCBcBcBcBcBcCBcBcCCBcBcCCBcB

--------------------------------------------------------------------------------
-375 pt/round: E3(P3) "Collude but retaliate"
-75 pt/round: E1(P1) "Betray"
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb
BbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBb

cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb
BbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBb

cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb
BbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBb

--------------------------------------------------------------------------------
-199 pt/round: E3(P3) "Collude but retaliate"
-199 pt/round: E2(P2) "Alternate"
CcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc
CBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB

BcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcB
cBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBcBc

--------------------------------------------------------------------------------
